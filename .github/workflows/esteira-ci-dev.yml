name: esteira-ci-dev

on:
  push:
    branches:
      - snapshot

jobs:
  setup:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git actions
        uses: actions/checkout@v2
# ---- JAVA -----
#      - name: Technology setup
#        uses: actions/setup-java@v1
#        with:
#          java-version: 21
# ---- NODE -----
#      - name: Technology setup
#        uses: actions/setup-node@v2
#        with:
#          node-version: 20.11

  build:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: [setup]
    steps:
      - name: Checkout git actions
        uses: actions/checkout@v2
# ---- NODE -----
#      - name: Install Dependencies
#        run: yarn
#      - name: Production Build
#        run: yarn build
# ---- JAVA -----
#      - name: Install Dependencies
#        run: mvn clean install
#      - name: Production Build
#        run: mvn package
  release_tag:
    runs-on: ubuntu-latest
    needs: [setup, build]
    outputs:
      tag_name: ${{ steps.release.outputs.tag_name }}
      html_url: ${{ steps.release.outputs.html_url }}
      body: ${{ steps.release.outputs.body }}
    steps:
      - name: Create Release/tag at Github
        id: release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commitish: snapshot

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: [setup, build, release_tag]
    steps:
      - name: Docker QEMU setup
        uses: docker/setup-qemu-action@v2

      - name: Docker Buildx setup
        uses: docker/setup-buildx-action@v2

      - name: Login Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_PROJECT }}:snapshot

  create_release:
    runs-on: ubuntu-latest
    needs: [setup, build, release_tag, build-and-push-image]
    steps:
      - name: Create pull request to main branch
        id: criar-pr
        uses: pyrbin/single-pr-updater@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          label: ðŸš€ release
          head: snapshot
          base: main
          title: Release ${{ needs.release_tag.outputs.tag_name }}
          body: |
            ## [Release ${{ needs.release_tag.outputs.tag_name }}](${{ needs.release_tag.outputs.html_url }})
            ${{ needs.release_tag.outputs.body }}
          draft: false

  post_process:
    runs-on: ubuntu-latest
    needs: [setup, build, release_tag, build-and-push-image, create_release]
    steps:
      - name: Checkout git actions
        uses: actions/checkout@v2
# ---- JAVA -----
#      - name: Update project version
#        run: mvn -B versions:set -DnewVersion=${{ needs.release_tag.outputs.tag_name }} -DgenerateBackupPoms=false
# ---- NODE -----
#      - name: Update project version
#        run: npm version ${{ needs.release_tag.outputs.tag_name }} --no-git-tag-version --allow-same-version
      - name: Commit new project version
        uses: stefanzweifel/git-auto-commit-action@v4
