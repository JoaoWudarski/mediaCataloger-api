name: esteira-ci-prd

on:
  push:
    branches:
      - main

jobs:
  setup:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git actions
        uses: actions/checkout@v2
      - name: Technology setup
        uses: actions/setup-java@v1
        with:
          java-version: 17

  build:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: [setup]
    steps:
      - name: Checkout git actions
        uses: actions/checkout@v2
      - name: Technology setup
        uses: actions/setup-java@v1
        with:
          java-version: 21
      - name: Install Dependencies
        run: mvn clean install
      - name: Production Build
        run: mvn package
  release_tag:
    runs-on: ubuntu-latest
    needs: [setup, build]
    outputs:
      tag_name: ${{ steps.release.outputs.tag_name }}
      release_id: ${{ steps.release.outputs.id }}
    steps:
      - name: Create Release/tag at Github
        id: release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: [setup, build, release_tag]
    steps:
      - name: Docker QEMU setup
        uses: docker/setup-qemu-action@v2

      - name: Docker Buildx setup
        uses: docker/setup-buildx-action@v2

      - name: Login Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_PROJECT }}:${{ needs.release_tag.outputs.tag_name }}, ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_PROJECT }}:latest

  post_process:
    runs-on: ubuntu-latest
    needs: [setup, build, release_tag, build-and-push-image]
    steps:
      - name: Publish release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.release_tag.outputs.release_id }}
